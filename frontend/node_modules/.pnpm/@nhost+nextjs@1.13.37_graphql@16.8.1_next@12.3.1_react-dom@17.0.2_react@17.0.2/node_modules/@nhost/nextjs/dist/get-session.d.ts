import { NhostSession } from '@nhost/react';
import { GetServerSidePropsContext } from 'next';
import { CreateServerSideClientParams } from './create-server-side-client';
/**
 * Refreshes the access token if there is any and returns the Nhost session.
 *
 * @example
 * ### Using an arrow function
 *
 * ```js
 * export const getServerSideProps: GetServerSideProps = async (context) => {
 *   const nhostSession = await getNhostSession(
 *     { subdomain: '<project_subdomain>', region: '<project_region>' },
 *     context
 *   )
 *
 *   return {
 *     props: {
 *       nhostSession
 *     }
 *   }
 * }
 * ```
 *
 * @example
 * ### Using a regular function
 *
 * ```js
 * export async function getServerSideProps(context: GetServerSidePropsContext) { // or NextPageContext
 *   const nhostSession = await getNhostSession(
 *     { subdomain: '<project_subdomain>', region: '<project_region>' },
 *     context
 *   )
 *
 *   return {
 *     props: {
 *       nhostSession
 *     }
 *   }
 * }
 * ```
 *
 * @param backendUrl - URL of your Nhost application
 * @param context - Next.js context
 * @returns Nhost session
 */
export declare const getNhostSession: (params: string | CreateServerSideClientParams, context: GetServerSidePropsContext) => Promise<NhostSession | null>;
//# sourceMappingURL=get-session.d.ts.map