import { NhostClient, NhostReactClientConstructorParams } from '@nhost/react';
import { GetServerSidePropsContext } from 'next';
export type CreateServerSideClientParams = Partial<Pick<NhostReactClientConstructorParams, 'subdomain' | 'region' | 'authUrl' | 'functionsUrl' | 'graphqlUrl' | 'storageUrl'>>;
/**
 * Creates an Nhost client that runs on the server side.
 * It will try to get the refesh token in cookies, or from the request URL
 * If a refresh token is found, it uses it to get an up to date access token (JWT) and a user session
 * This method resolves when the authentication status is known eventually
 * @param config - An object containing connection information
 * @param context - Server side context
 * @returns instance of `NhostClient` that is ready to use on the server side (signed in or signed out)
 */
export declare const createServerSideClient: (params: string | CreateServerSideClientParams, context: GetServerSidePropsContext) => Promise<NhostClient>;
//# sourceMappingURL=create-server-side-client.d.ts.map